# Evenements de notification
mqtt:
  sensor:
    - name: "notifications_onscreen"
      state_topic: "home/notif/onscreen"
      # unit_of_measurement: "dBm"
      # value_template: "{{ value_json.RSSI }}"
      # availability:
      #   - topic: "home/sensor1/status"
      # payload_available: "online"
      # payload_not_available: "offline"
      # json_attributes_topic: "home/sensor1/attributes"
  
  # number:
  #   - name: notifications
  #     command_topic: "home/notif/onscreen"
  #     state_topic: "home/notif/onscreen"

sensor:
  - platform: time_date
    display_options:
      - time
      - date

  # Speedtest replacement with original binary
  - platform: command_line
    name: "SpeedTest CLI Data"
    unique_id: speedtest_cli_data
    command: "config/speedtest/speedtest --format=json --accept-license --accept-gdpr"
    #Toutes les 4 heures, 60 * 60 * 4 = 14400  3600 = 1 heure
    scan_interval: 3600
    command_timeout: 60
    value_template: >-
      {{ 
        { 
          "ping": value_json.ping.latency, 
          "download": value_json.download.bandwidth, 
          "upload": value_json.upload.bandwidth 
        }
        | to_json 
      }}

  # Système
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: disk_use_percent
        arg: /filer
      - type: disk_use
      - type: disk_free
      - type: memory_use_percent
      - type: memory_use
      - type: memory_free
      - type: swap_use_percent
      - type: swap_use
      - type: swap_free
      - type: network_in
        arg: eno1
      - type: network_out
        arg: eno1
      - type: throughput_network_in
        arg: eno1
      - type: throughput_network_out
        arg: eno1
      - type: network_in
        arg: wg0
      - type: network_out
        arg: wg0
      - type: throughput_network_in
        arg: wg0
      - type: throughput_network_out
        arg: wg0
      - type: processor_use
      - type: processor_temperature
      - type: last_boot
      - type: ipv4_address
        arg: eno1
      - type: ipv4_address
        arg: wg0

  # - platform: bbox
  #   name: bbox
  #   monitored_variables:
  #     - down_max_bandwidth
  #     - up_max_bandwidth
  #     - current_down_bandwidth
  #     - current_up_bandwidth
  #     - uptime
  #     - number_of_reboots

  # https://github.com/NemesisRE/sensor.plex_recently_added
  - platform: plex_recently_added
    host: !secret plex_host
    port: !secret plex_port
    token: !secret plex_token
    img_dir: /
    # on_deck: true
    image_resolution: 800

  - platform: plex_recently_added
    name: Plex Recently Show Added
    host: !secret plex_host
    port: !secret plex_port
    token: !secret plex_token
    img_dir: /
    image_resolution: 800
    section_types:
      - show

  - platform: plex_recently_added
    name: Plex Recently Movie Added
    host: !secret plex_host
    port: !secret plex_port
    token: !secret plex_token
    img_dir: /
    image_resolution: 800
    section_types:
      - movie

template:
  - sensor:
      - name: 'SpeedTest CLI Ping'
        unique_id: speedtest_cli_ping
        icon: mdi:speedometer
        unit_of_measurement: ms
        state_class: measurement
        state: "{{ (states('sensor.speedtest_cli_data') | from_json).ping | round(2) }}"
      - name: 'SpeedTest CLI Download'
        unique_id: speedtest_cli_download
        icon: mdi:speedometer
        unit_of_measurement: Mbit/s
        state_class: measurement
        state: "{{ ((states('sensor.speedtest_cli_data') | from_json).download * 8 / 1000 / 1000) | round(2) }}"
      - name: 'SpeedTest CLI Upload'
        unique_id: speedtest_cli_upload
        icon: mdi:speedometer
        unit_of_measurement: Mbit/s
        state_class: measurement
        state: "{{ ((states('sensor.speedtest_cli_data') | from_json).upload * 8 / 1000 / 1000) | round(2) }}"

# samsungtv:
#   - host: !secret tv_ip
#     turn_on_action:
#       - service: wake_on_lan.send_magic_packet
#         data:
#           mac: !secret tv_mac
#     app_list:
#       '{"Plex": "kIciSQlYEM.plex","Netflix": "11101200001", "YouTubeTV": " PvWgqxV3Xa.YouTubeTV"}'

media_player:
  - platform: samsungtv_tizen
    name: samsung_tv_salon
    # device_id: 47f56a24-c389-4ea4-84d0-01c4af42abd8
    host: 192.168.1.57
    mac: 9c:8c:6e:29:3a:30
    # api_key: 4c8ba490-fe54-4362-aeeb-cae76327d808
    # update_method: smartthings
    # turn_on_action:
    #   service: wake_on_lan.send_magic_packet
    #   data:
    #     mac: 9c:8c:6e:29:3a:30
    # app_list:
    #  '{"Plex": "kIciSQlYEM.plex","Netflix": "11101200001", "YouTubeTV": " PvWgqxV3Xa.YouTubeTV"}'

# DEPRECATED - Spotify 
# spotify:
#     client_id: !secret spotify_client_id
#     client_secret: !secret spotify_secret

# Spotcast https://github.com/fondberg/spotcast
spotcast:
  sp_dc: !secret stef_sp_dc
  sp_key: !secret stef_sp_key
  # country: FR #optional
  accounts:
    stef:
      sp_dc: !secret stef_sp_dc
      sp_key: !secret stef_sp_key
    # jo:
    #   sp_dc: !secret ming_sp_dc
    #   sp_key: !secret ming_sp_key

# device_tracker:
#   - platform: bbox

# Ping : connexion internet et VPN
binary_sensor:
  - platform: ping
    name: internet_ping
    host: !secret internet_ping_test
    scan_interval: 15

  - platform: ping
    name: vpn_stef_iphone_perso
    host: !secret network_vpn_stef_iphone_xr
    scan_interval: 15

  - platform: ping
    name: vpn_stef_iphone_pro
    host: !secret network_vpn_stef_iphone_pro
    scan_interval: 15

  - platform: ping
    name: vpn_stef_macbook
    host: !secret network_vpn_stef_macbook
    scan_interval: 15

  - platform: ping
    name: vpn_sonia
    host: !secret network_vpn_sonia
    scan_interval: 15

  # Tendance de température : pour la détection des fenêtres ouvertes
  # https://www.home-assistant.io/integrations/trend/
  - platform: trend
    sensors:
      trend_temp_chambre:
        entity_id: climate.wiser_chambre
        attribute: current_temperature
        friendly_name: Détection ouverture fenêtre chambre
        sample_duration: 300
        max_samples: 5
        min_gradient: -0.0017
        device_class: window

      trend_temp_salon:
        entity_id: climate.wiser_salon
        attribute: current_temperature
        friendly_name: Détection ouverture fenêtre salon
        sample_duration: 300
        max_samples: 5
        min_gradient: -0.0017
        device_class: window

      trend_temp_bureau:
        entity_id: climate.wiser_bureau
        attribute: current_temperature
        friendly_name: Détection ouverture fenêtre bureau
        sample_duration: 300
        max_samples: 5
        min_gradient: -0.0017
        device_class: window

      # temp_rising:
      #   entity_id: sensor.outside_temperature
      #   sample_duration: 7200
      #   max_samples: 120
      #   min_gradient: 0.0008
      #   device_class: heat

# template:
#   - sensor:
#       - unique_id: nas_status
#         state: >
#           {% set entity_id = 'sensor.nas_volume_1_status' %}
#           {% if is_state(entity_id, 'normal') %}
#             Bra
#           {% elif is_state(entity_id, 'background_scrubbing') %}
#             Dataskrubbning
#           {% else %}
#             {{ states(entity_id) }}
#           {% endif %}
#         attributes:
#           friendly_name: Systemhälsa
#           icon: cil:synology-nas

#       - unique_id: domain_counter
#         state: >
#           {{ states | count }}
#         attributes:
#           automation: >
#             {{ states.automation | count }}
#           binary_sensor: >
#             {{ states.binary_sensor | count }}
#           device_tracker: >
#             {{ states.device_tracker | count }}
#           light: >
#             {{ states.light | count }}
#           media_player: >
#             {{ states.media_player | count }}
#           sensor: >
#             {{ states.sensor | count }}
#           switch: >
#             {{ states.switch | count }}
#           other: >
#             {% set exclude = this.attributes | list %}
#             {{ states | rejectattr('domain', 'in', exclude) | list | count }}

# shell_command:
#   restart_container: !secret restart_container
#   purge_log: truncate -s 0 /config/home-assistant.log